#!/usr/bin/env -S node --experimental-wasm-modules

import { compile } from "wx-compiler-wasm";
import { Command } from "commander";
import { readFile, writeFile } from "node:fs/promises";
import { Buffer } from "node:buffer";
import process from "node:process";

const program = new Command("wx-compiler")
	.argument("<filepath>", "Path to the wx file to compile")
	.action(async (filepath) => {
		try {
			const source = await readFile(filepath, "utf-8");
			const result = compile(filepath, source);
			if (!result.bytecode) {
				console.error(result.diagnostics);
				process.exit(1);
			}

			const outputFile = filepath.replace(/\.wx$/, ".wasm");
			await writeFile(outputFile, Buffer.from(result.bytecode));
		} catch (error) {
			if (error instanceof Error) {
				console.error(error.message);
			}
			process.exit(1);
		}
	});

program.parse(process.argv);
