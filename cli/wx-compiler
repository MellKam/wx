#!/usr/bin/env node --experimental-wasm-modules

import { compile } from "wx-compiler-wasm";
import { Command } from "commander";
import { readFile, writeFile } from "node:fs/promises";
import process from "node:process";

const program = new Command("wx-compiler")
	.argument("<filepath>", "Path to the wx file to compile")
	.action(async (filepath) => {
		try {
			const source = await readFile(filepath, "utf-8");
			const bytecode = compile(filepath, source);
			if (!bytecode) {
				console.error("compilation error");
				process.exit(1);
			}

			const outputFile = filepath.replace(/\.wx$/, ".wasm");
			await writeFile(outputFile, bytecode);
		} catch (error) {
			if (Array.isArray(error)) {
				console.error(JSON.stringify(error, null, 2));
			}
			if (error instanceof Error) {
				console.error(error.message);
			}
			process.exit(1);
		}
	});

program.parse(process.argv);
